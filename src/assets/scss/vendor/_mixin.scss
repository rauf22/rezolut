@mixin breakpoint($bp) {

  @media (max-width: $bp) {
    @content
  }
}

@mixin breakpointlg($bp) {

  @media (min-width: $bp) {
    @content
  }
}


// /* Адаптивное свойство */ 
// пример /* @include adaptive-value("padding", 50, 20, 0) */
// @include adaptive-value("свойство", начальное макетное значение, минимальное значение, режим)

$maxWidth: 1920;
$maxWidthContainer: 1170;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    /* // Только если меньше контейнера */
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320})); 
    }
  } @else if $type==2 {
    /* // Только если больше контейнера */
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})); 
    }
  } @else {
    /* // Всегда */
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})); 
  }
}